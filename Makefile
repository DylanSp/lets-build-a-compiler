# from http://hiltmon.com/blog/2013/07/03/a-simple-c-plus-plus-project-structure/

CC = g++
CFLAGS = -std=c++11 -Wall -Wextra -Wpedantic -pedantic-errors -g
SRCEXT = cc
SPECEXT = yml

SRCDIR = src
TESTDIR = test/generated
BUILDDIR = build
TESTBUILDDIR = test/build
TARGET = 
SOURCES = $(wildcard $(SRCDIR)/*.$(SRCEXT))
OBJECTS = $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o))
SPECDIR = test/specs
TESTSPECS = $(wildcard $(SPECDIR)/*.$(SPECEXT))
TESTCLASSSOURCES := $(patsubst $(SPECDIR)/%,$(TESTDIR)/%,$(TESTSPECS:.$(SPECEXT)=.$(SRCEXT)))
TESTCASESOURCES := $(patsubst %.cc,%Test.cc,$(TESTCLASSSOURCES))
TESTCLASSOBJS := $(patsubst $(TESTDIR)/%,$(TESTBUILDDIR)/%,$(TESTCLASSSOURCES:.$(SRCEXT)=.o))
TESTCASEOBJS := $(patsubst $(TESTDIR)/%,$(TESTBUILDDIR)/%,$(TESTCASESOURCES:.$(SRCEXT)=.o))

LIB = -pthread -L /usr/local/lib 
INC = -I include -I src -I lib/googletest/googletest/include -I lib/cxx-prettyprint -I /usr/local/include

#all: $(TARGET)
all: interactive full tests yaml_parser

interactive: bin/interactive_compiler
full: bin/full_compiler
tests: bin/run_tests
yaml_parser: bin/yaml_parser
spec_generator: bin/spec_generator
bool_int_test: bin/bool_int_test

.PRECIOUS: test/generated/%.$(SRCEXT)

$(TARGET): $(OBJECTS)
	@echo " Linking..."
	$(CC) $^ -o $(TARGET) $(LIB)
  
$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT) 
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INC) -c -o $@ $<
  
$(TESTDIR)/%.$(SRCEXT): $(SPECDIR)/%.$(SPECEXT) bin/test_generator
	@mkdir -p $(TESTDIR)
	bin/test_generator $<
  
$(TESTBUILDDIR)/%.o: $(TESTDIR)/%.$(SRCEXT) 
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INC) -c -o $@ $<
  
# static pattern rule, needed to properly make test case object files
$(TESTCASEOBJS): $(TESTBUILDDIR)/%.o: $(TESTDIR)/%.$(SRCEXT)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INC) -c -o $@ $<
  
.PHONY: clean
  
clean:
	@echo " Cleaning..."; 
	$(RM) -r $(BUILDDIR) $(TESTBUILDDIR) $(TARGET) $(TESTDIR)
	
# Spikes
bin/interactive_compiler: $(OBJECTS) spikes/interactive_compiler.cc
	$(CC) $(CFLAGS) $^ $(INC) $(LIB) -o bin/interactive_compiler	
  
bin/full_compiler: $(OBJECTS) spikes/full_compiler.cc
	mkdir -p test/src
	$(CC) $(CFLAGS) $^ $(INC) $(LIB) -o bin/full_compiler
	
bin/test_generator: $(OBJECTS) spikes/test_generator.cc
	$(CC) $(CFLAGS) $^ $(INC) $(LIB) -o bin/test_generator -lyaml-cpp 
	
bin/run_tests: $(TESTCLASSOBJS) $(TESTCASEOBJS)
	$(CC) $(CFLAGS) $(LIB) $(TESTCLASSOBJS) $(TESTCASEOBJS) lib/googletest/googletest/make/gtest_main.a -o bin/run_tests 

bin/yaml_parser: spikes/yaml_parser.cc
	$(CC) $(CFLAGS) $^ $(INC) $(LIB) -o bin/yaml_parser -lyaml-cpp 
	
bin/spec_generator: spikes/spec_generator.cc
	mkdir -p test/new_specs
	$(CC) $(CFLAGS) $^ $(INC) $(LIB) -o bin/spec_generator -lyaml-cpp 
	
bin/bool_int_test: spikes/bool_int_test.cc
	$(CC) $(CFLAGS) $^ $(INC) $(LIB) -o bin/bool_int_test
	
# output generated by full_compiler
sample: 
	$(CC) $(CFLAGS) -o bin/sample test/src/SampleClass.cc


	
	